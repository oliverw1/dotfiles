set editing-mode vi
set bell-style visible
$if term=linux
	set vi-ins-mode-string \1\e[?0c\2
	set vi-cmd-mode-string \1\e[?8c\2
$else
	set vi-ins-mode-string \1\e[6 q\2
	set vi-cmd-mode-string \1\e[2 q\2
$endif

$if Bash
    # expand command argument shortcuts, like !:2
    Space: magic-space
$endif
set blink-matching-paren on
# have tab-completion use colors
set colored-stats On
# colorize common prefixes
set colored-completion-prefix on
# allow multiline pastes to execute as one whole
set enable-bracketed-paste On
# autocomplete non-hidden files, unless prepended with .
set match-hidden-files off
# A single tab will now also list the options afterwards of ambiguous completions
set show-all-if-ambiguous on
set completion-query-items 30

# key bindings
"\e[A": history-search-backward
"\e[B": history-search-forward
set keymap vi-command
"k": history-search-backward
"j": history-search-forward

set keymap vi-insert
"\C-A": beginning-of-line
"\C-E": end-of-line
"\C-K": kill-line
"yy": vi-movement-mode

# macros
Control-t: " > /tmp/a"
Control-j: menu-complete
Control-k: menu-complete-backward
$if mode=vi
  set show-mode-in-prompt on
# Control+o to add an option to the previous command
  Control-o: "\e0kea "
  Control-l: clear-screen
  # don't wait for additional input when a key is pressed.
  # Needed for the mappings below.
  set keyseq-timeout 0

  # Does not work exactly as in emacs mode
  "\e.": yank-last-arg

$else
Control-o: "\C-p\C-a\M-f "
$endif

